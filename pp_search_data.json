[{"url":"cheatsheets/","title":"Julia resources","tags":["welcome"],"text":"Julia resources Getting Started with Julia - live . Fastrack to Julia  cheatsheet. MATLAB-Julia-Python comparative cheatsheet  by  QuantEcon group Plots.jl cheatsheet"},{"url":".","title":"index","tags":["homepage"],"text":""},{"url":"installation/","title":"Software installation","tags":["welcome"],"text":"First-time setup: Install Julia & Pluto Text and pictures version: Step 1: Install Julia  1.8.2 Go to  https://julialang.org/downloads  and download the current stable release, Julia  1.8.2 , using the correct version for your operating system (Linux x86, Mac, Windows, etc). Step 2: Run Julia After installing,  make sure that you can run Julia . On some systems, this means searching for the “Julia  1.8.2 ” program installed on your computer; in others, it means running the command  julia  in a terminal. Make sure that you can execute  1 + 1 : Make sure that you are able to launch Julia and calculate  1+1  before proceeding! Step 3: Install  Pluto Next we will install the  Pluto , the notebook environment that we will be using during the course. Pluto is a Julia  programming environment  designed for interactivity and quick experiments. Open the  Julia REPL . This is the command-line interface to Julia, similar to the previous screenshot. Here you type  Julia commands , and when you press ENTER, it runs, and you see the result. To install Pluto, we want to run a  package manager command . To switch from  Julia  mode to  Pkg  mode, type  ]  (closing square bracket) at the  julia>  prompt: \njulia> ]\n\n(@v 1.8 ) pkg>\n The line turns blue and the prompt changes to  pkg> , telling you that you are now in  package manager mode . This mode allows you to do operations on  packages  (also called libraries). To install Pluto, run the following (case sensitive) command to  add  (install) the package to your system by downloading it from the internet.\nYou should only need to do this  once  for each installation of Julia: \n(@v 1.8 ) pkg> add Pluto\n This might take a couple of minutes, so you can go get yourself a cup of tea! You can now close the terminal. Step 4: Use a modern browser: Mozilla Firefox or Google Chrome We need a modern browser to view Pluto notebooks with. Firefox and Chrome work best. Second time:  Running Pluto & opening a notebook Repeat the following steps whenever you want to work on a project or homework assignment. Step 1: Start Pluto Start the Julia REPL, like you did during the setup. In the REPL, type: julia> using Pluto\n\njulia> Pluto.run()\n The terminal tells us to go to  http://localhost:1234/  (or a similar URL). Let’s open Firefox or Chrome and type that into the address bar. If you’re curious about what a  Pluto notebook  looks like, have a look at the  Featured Notebooks . These notebooks are useful for learning some basics of Julia programming. If you want to hear the story behind Pluto, have a look a the  JuliaCon presentation . If nothing happens in the browser the first time, close Julia and try again. And please let us know! Step 2a: Opening a notebook from the web This is the main menu - here you can create new notebooks, or open existing ones. Our homework assignments will always be based on a  template notebook , available in this GitHub repository. To start from a template notebook on the web, you can  paste the URL into the blue box  and press ENTER. For example, homework 0 is available  here . Go to this page, and on the top right, click on the button that says “Edit or run this notebook”. From these instructions, copy the notebook link, and paste it into the box. Press ENTER, and select OK in the confirmation box. The first thing we will want to do is to save the notebook somewhere on our own computer; see below. Step 2b: Opening an existing notebook file When you launch Pluto for the second time, your recent notebooks will appear in the main menu. You can click on them to continue where you left off. If you want to run a local notebook file that you have not opened before, then you need to enter its  full path  into the blue box in the main menu. More on finding full paths in step 3. Step 3: Saving a notebook We first need a folder to save our homework in. Open your file explorer and create one. Next, we need to know the  absolute path  of that folder. Here’s how you do that in  Windows ,  MacOS  and  Ubuntu . For example, you might have: C:\\Users\\fons\\Documents\\18S191_assignments\\  on Windows /Users/fons/Documents/18S191_assignments/  on MacOS /home/fons/Documents/18S191_assignments/  on Ubuntu Now that we know the absolute path, go back to your Pluto notebook, and at the top of the page, click on  “Save notebook…” . This is where you type the  new path+filename for your notebook : Click  Choose . Step 4: Sharing a notebook After working on your notebook (your code is autosaved when you run it), you will find your notebook file in the folder we created in step 3. This the file that you can share with others, or submit as your homework assignment to Canvas. \nconst run = f => f();\nrun(async () => {\nconst versions = await (await fetch(`https://julialang-s3.julialang.org/bin/versions.json`)).json()\nconst version_names = Object.keys(versions).sort().reverse()\nconst stable = version_names.find(v => versions[v].stable)\nconsole.log({stable})\nconst pkg_stable = /\\d+\\.\\d+/.exec(stable)[0]\ndocument.querySelectorAll(\"auto-julia-version\").forEach(el => {\n    console.log(el)\n    el.innerText = el.getAttribute(\"short\") == null ? stable : pkg_stable\n})\n});"},{"url":"logistics/","title":"Class logistics","tags":["welcome"],"text":"main a img {\n    width: 5rem;\n    margin: 1rem;\n}\n Course logistics Course Schedule The class starts on  Monday 15th January 2024 Lectures run for 10 weeks Each Monday, new lecture material is released Each Friday from 12:00 to 14:00 Finnish time an optional zoom session is hosted (link in Moodle). During this session:\n Lecturer gives a short recap Students can ask questions about what was unclear Lecturer and students can discuss and deepen together some topics Students can ask questions about the assignment It is important that you get to know the lecture material before coming to the session!!  You are not expected to understand everything, it is perfectly fine to have questions, but you are expected to have a look at the material and put an effort on your own If students prefer, this session can be recorded and shared on moodle afterwards. Resources This website: contains all lecture material Moodle: contains “confidential” material, such as link to zoom and zulip Box to return exercises video lectures Zulip: safe place for chatting, you can ask for help any time. You are also encouraged to answer your fellow students’ questions if you know the answer. Grading Exam: 80 points Project work: 20 points Weekly exercise: 10 points Final grade (for Finnish students): Points Grade >= 90 5 >= 80 4 >= 70 3 >= 60 2 >= 50 1 less 0 (fail) EUNICE students : ask your university for the conversion from Finnish grade to your local grading system. Exam Will be in Moodle an “open book exam” Exam will open in the end of March and have time till end of April to complete it. Once you start the exam, you have 3 hours. You can use books, encyclopedia, resources etc. etc.  but you are not allowed to use chatGPT and/or other human beings Project work can be done alone or in groups of 2 people “small research project”\n write a project report (~ 6-8 pages) give feedback to your peers project present your work to your peers More detailed timeline during week 3 Weekly exercise Each week 1 exercise sheet which has 1-2 exercises (max. 2 points in total) Deadline is  next week Friday 10 exercise sheets in total => 20 points in total In the end you can get  10 points  (p/2) added to your exam I.e., by actively solving weekly exercise you can boost your grade by one. ChatGPT and plagiarism policy Discussing with others in zulip is good and even encouraged, however your solutions must be your own. If you solve weekly exercises together with a friend, clearly state at the beginning of the solution “solved together with XXXX” Using chatGPT (or similar) to generate answers is strictly forbidden! . Students getting caught will fail the class and be reported to the university for plagiarism. Spelling and grammar mistakes will not lower your grade, hence using chatGPT to polish the language is just a pointless risk!"},{"url":"search/","title":"Search results","tags":[],"text":"window.init_search(); Search Results \nLoading..."},{"url":"assets/scripts/get_highlights/","title":"get_highlights","tags":[],"text":"if isempty get metadata \"homepage\" , \"highlights\", nothing else highlights htl \"\"\" section div class \"content\" h2 x \"name\" h2 p x \"text\" p div div class \"preview\" img src \" x \"img\" \" div section \"\"\" for x in metadata \"homepage\" \"highlights\" htl \"\"\" div class \"subjectscontainer wide\" h1 Highlights h1 div class \"contain\" highlights div div \"\"\" end"},{"url":"assets/scripts/get_subjects/","title":"get_subjects","tags":[],"text":"let sections metadata \"sidebar\" sections htl \"\"\" let input other page.input output other page.output name get output.frontmatter, \"title\", basename input.relative path desc get output.frontmatter, \"description\", nothing tags get output.frontmatter, \"tags\", String image get output.frontmatter, \"image\", nothing class \"no decoration\", \"tag replace x, \" \" \" \" \" for x in tags ..., image nothing || isempty image ? nothing htl \"\"\" a title desc class class href root url \" \" other page.url h3 name h3 img src image a \"\"\" end for other page in collections section id .pages \"\"\" for section id, section name in sections isempty sections ? nothing htl \"\"\" div class \"wide subjectscontainer\" h1 Subjects h1 div class \"subjects\" sections div div \"\"\" end"},{"url":"homework/hw1/","title":"Basic fuzzy logic concepts","tags":["homeworks","membership functions","T-norms","julia programming","week1"],"text":" A Pluto.jl notebook v0.19.29 frontmatter homework number \"1\" order \"4\" title \"Basic fuzzy logic concepts\" tags \"homeworks\", \"membership functions\", \"T norms\", \"julia programming\", \"week1\" layout \"layout.jlhtml\" description \"Week 1 homework introduction to fuzzy logic\" using Markdown using InteractiveUtils using Plots, PlutoUI md\"\"\" Homework 1 Introduction to fuzzy logic. Download this notebook see button on the top right and return it in Moodle by the deadline. For \"pen and paper\" exercises, you can write your solution as markdown in the notebook latex is also supported , however, if you prefer, you are also allowed to write it by hand and return it as a separate file. Exercise 1 T and S norms Prove that the minimum function ``f x, y \\min x, y `` is indeed a T norm. That is, prove that it satisfies the requirements of a T norm definition. Show also that the minimum T norm maximum S norm pair satisfies the relation ``S x, y 1 T 1 x, 1 y ``. Exercise 2 Membership functions and first steps with Julia Complete the following function, which takes as input a value `x`, the parameters `a`, `b`, `c` and computes the triangular membershpi function evaluate at `x`. The meaning of the parameters is explained in the lecture material. To verify your code plot your membership function with parameters `a 1`, `b 3`, `c 5` over the domain `` 0, 10 `` the plotting library has already been imported for you at the beginning of the notebook~. \"\"\" function my triangular membership function x, a, b, c missing end md\"\"\" Fill the following function that returns a membership function computed as the disjunction of two triangular membership functions using the following parameters `a, b, c 1, 3, 5` `a, b, c 2, 4, 6` Use the maximum S norm to copmute the disjunction. Plot your membership function over the domain `` 0, 10 ``. Is your membership function convex? \"\"\" function my fancy mf x missing end "},{"url":"homework/hw2/","title":"Fuzzy arithmetic","tags":["homeworks","membership functions","fuzzy numbers","fuzzy arithmetic","week2"],"text":" A Pluto.jl notebook v0.19.29 frontmatter homework number \"2\" order \"3\" title \"Fuzzy arithmetic\" tags \"homeworks\", \"membership functions\", \"fuzzy numbers\", \"fuzzy arithmetic\", \"week2\" layout \"layout.jlhtml\" description \"Week 2 homework fuzzy arithmetic implementation\" using Markdown using InteractiveUtils using Plots, PlutoUI, PlutoTeachingTools, FuzzyLogic TableOfContents md\"\"\" Homework 2 Fuzzy arithmetic implementation. Download this notebook see button on the top right and return it in Moodle by the deadline. For \"pen and paper\" exercises, you can write your solution as markdown in the notebook latex is also supported , however, if you prefer, you are also allowed to write it by hand and return it as a separate file. Exercise 1 Fuzzy sum analytically The fuzzy numbers ``A`` and ``B`` considered in the lecture notes are can be represented by the following expressions. ```math A x \\begin cases x 1&x\\in 1,2 \\\\3 x&x\\in 2,3 \\\\0&\\text otherwise \\end cases ``` and ```math B x \\begin cases \\frac 1 2 x \\frac 1 2 &x\\in 1,3 \\\\\\frac 5 2 \\frac 1 2 x&x\\in 3,5 \\\\0&\\text otherwise \\end cases ``` Your task is to find an analytical expression for ``A B``. That is, your answer final answer should be in the form ```math A B x \\begin cases \\dots&x\\in 2,5 \\\\\\ldots &x\\in 5,8 \\\\0&\\text otherwise \\end cases ``` \"\"\" hint md\"To help you check your answer, the previous expression tells you what the cases in piecewise definition should be.\" let txt md\"\"\"You can follow the following steps 1. First compute symbolically the ``\\alpha`` cut for ``A``. I.e. you should obtain something in the form `` f A \\alpha , g A \\alpha ``. Do the same for ``B``. 2. Recall how operations on fuzzy numbers are defined, you should now be able to find ``^ \\alpha A B f A B \\alpha , g A B \\alpha ``. 3. How you need to assembles the final expression, i.e. from ``x f A B \\alpha `` you should be able to find ``\\alpha f^ 1 A B x ``. Recall that ``\\alpha \\in 0, 1 ``, what is the corresponding interval for ``x``? \"\"\" hint txt end md\"\"\" Exercise 2 Fuzzy arithmetic programmatically In this exercise you will write a function `my fuzzy sum` that computes the sum of two fuzzy numbers. However, we cannot evaluate the membership function at an infinite value of ``x``, hence we will also discretize the domain. Let us create the fuzzy numbers from the lecture notes, we will be using these to test our codes. \"\"\" begin mf1 TriangularMF 1, 2, 3 mf2 TriangularMF 1, 3, 5 x 0 0.01 10 discretized domain a mf1. x discretized first fuzzy number b mf2. x discretized second fuzzy number plotting p1 plot x, a, title \"A\", legend nothing p2 plot x, b, title \"B\", legend nothing plot p1, p2 end md\"\"\" Helper function compute alpha cut First, we will write a function to get the alpha cut of a given membership function assumed to be convex . That is, we will implement a function `get alpha cut`. Study carefully the docstring of the function below and fill its body. \"\"\" \"\"\" Given a convex membership function, compute its alpha cut for a given value alpha. Since the membership function is assumed to be convex, the function simply returns the lower and upper bound of the alpha cut. Inputs `x` vector of numbers, repreenting the domain of the fuzzy numbers `mf` membership function of the fuzzy number evaluated at the points in `x`. That is, `mf i ` is the membership degree of `x i `. Outputs `alpha low` lower bound of the alpha cut `alpha high` upper bound of the alpha cut. \"\"\" function get alpha cut x, mf, alpha alpha low 0 alpha high 0 return alpha low, alpha high end md\"\"\" Before going further, let us test a bit our function. The following should return the same alpha cuts computed in the lecture materials \"\"\" get alpha cut x, a, 0.5 get alpha cut x, b, 0.25 get alpha cut x, b, 1 md\"\"\" Main function implementation As mentioned in the lecture notes, we cannot use infinite many ``\\alpha`` values in the computer, hence we will need to discretize , that is, use a finite number of values `` \\alpha 1, \\alpha 2, \\ldots, \\alpha N ``. Now we will implement `my fuzzy sum`. Study carefully the docstring of the function `my fuzzy sum` that you need to implement. Make sure you understand why the length of the output vectors is `2 length alphas ` Hint Reuse the function `get alpha cut` you wrote before. \"\"\" \"\"\" Computes the sum of two fuzzy numbers `a` and `b`, evaluated at the points of the domain `x`. Input `x` vector of numbers, repreenting the domain of the fuzzy numbers `a` membership function of the first fuzzy number evaluated at the points in `x`. That is, `a i ` is the membership degree of `x i `. `b` membership function of the second fuzzy number evaluated at the points in `x`. That is, `b i ` is the membership degree of `x i `. `alphas` Vector of values of alpha to use to compute alpha cuts Output `z` Vector of length `2 length alphas ` containing the new points of `a b`. Note that `z` should be sorted `mf` Vector of length `2 length alphas ` containing the membership degrees of `a b`, i.e `mf i ` is the membership degree of `z i `. \"\"\" function my fuzzy sum x, a, b, alphas 0.001, 0.25, 0.5, 0.75, 1 z Float64 mf Float64 return z, mf end md\"\"\" The following code will test your functions. If you implemented everything correctly, the plot should be similar to what you saw in the lecture notes. \"\"\" begin z, mf my fuzzy sum x, a, b compute sum of fuzzy numbers, uses default values for `alphas` plotting p3 plot z, mf, title \"A B\", legend nothing, xlims 0, 10 plot p1, p2, p3 end hint md\"Some of the following julia functions might be useful `findfirst`, `findlast`, `push `, `sortperm`, `append `, `sort`, `sort `\" "},{"url":"homework/hw3/","title":"Building a Mamdani inference system","tags":["homeworks","FuzzyLogic.jl","Mamdani inference system","week3"],"text":" A Pluto.jl notebook v0.19.29 frontmatter homework number \"3\" order \"1\" title \"Building a Mamdani inference system\" tags \"homeworks\", \"FuzzyLogic.jl\", \"Mamdani inference system\", \"week3\" layout \"layout.jlhtml\" description \"Week 3 homework Mamdani inference system\" using Markdown using InteractiveUtils using Plots, PlutoUI, FuzzyLogic md\"\"\" Homework 3 Introduction to FuzzyLogic.jl The short physical performance battery SPPB test is a series of timed physical activities that have been created to evaluate functional performance of physically impaired older adults for clinical purposes. The SPPB test measures balance, gait, strength, and endurance. It is a timed performance test which assigns a final score in the range 0 4 based on the timings. To assess the final performance, the personal trainer has gained the following rule of thumbs from his experience. 1. If `Side by Side Stand Time` is SHORT then `Standing Test Performance` is VERY POOR 2. If `Side by Side Stand Time` is LONG and `Semi Tandem Stand Time` is SHORT then `Standing Test Performance` is POOR 3. If `Side by Side Stand Time` is LONG and `Semi Tandem Stand Time` is LONG and `FullTandem Stand Time` is SHORT then `Standing Test Performance` is OK 4. If `Side by Side Stand Time` is LONG and `Semi Tandem Stand Time` is LONG and `FullTandem Stand Time` is MEDIUM then `Standing Test Performance` is GOOD 5. If `Side by Side Stand Time` is LONG and `Semi Tandem Stand Time` is LONG and `Full Tandem Stand Time` is LONG then `Standing Test Performance` is EXCELLENT Your task is to build the fuzzy inference system described above using `FuzzyLogic.jl`, which has been alraedy imported for you at the top of this notebook. After building the inference system, test it with a few input values and plot a summary of the inference system . For each variable, use the following membership functions. \"\"\" let plot x LinearMF 5, 10 x , 0, 10 label \"LONG\", title \"Side by side\", legend left plot x LinearMF 10, 5 x , 0, 10 label \"SHORT\", xticks 1 10 end let plot x LinearMF 5, 10 x , 0, 10 label \"LONG\", title \"Semi tandem\", legend left plot x LinearMF 10, 5 x , 0, 10 label \"SHORT\", xticks 1 10 end let plot x LinearMF 8, 10 x , 0, 10 label \"LONG\", title \"Full tandem\", legend left plot x TrapezoidalMF 3, 5, 9, 10 x , 0, 10 label \"MEDIUM\" plot x LinearMF 5, 3 x , 0, 10 label \"SHORT\", xticks 1 10 end begin plot x LinearMF 0.5, 0.0 x , 0, 4, label \"very poor\", title \"performance score\", xticks 0 0.5 4, legend left plot x TriangularMF 0.5, 1.0, 1.5 x , 0, 4 label \"poor\" plot x TriangularMF 1.5, 2.0, 2.5 x , 0, 4 label \"ok\" plot x TriangularMF 2.5, 3.0, 3.5 x , 0, 4 label \"good\" plot x LinearMF 3.5, 4.0 x , 0, 4 label \"very good\" end "},{"url":"week1/fuzzy_logic/","title":"Introduction to fuzzy logic","tags":["week1","fuzzy","fuzzy logic"],"text":" A Pluto.jl notebook v0.19.29 frontmatter chapter 1 section 3 order 3 title \"Introduction to fuzzy logic\" tags \"week1\", \"fuzzy\", \"fuzzy logic\" layout \"layout.jlhtml\" using Markdown using InteractiveUtils using PlutoTeachingTools, PlutoUI, Plots, FuzzyLogic TableOfContents md\"\"\" Fuzzy predicates In fuzzy logic, the truth value of a predicate can be any real from the interval `` 0, 1 ``. That means, fuzzy logic allows to express \"partial truths\". In fuzzy logic, we don't ask wether a statement is true or false, but rather how true that is. For example, the statement \"the temperature is hot\" could have truth value ``1`` if the temperature is 40 C. truth value ``0`` if the temperature is 40 C. truth value ``0.5`` if the temperature is 20 C. Membership functions To express the truth value of a predicate with use membership functions . Given a set ``A``, a membership function ``f`` is a function ``f A \\rightarrow 0, 1 ``. That is Markdown.Admonition \"info\", \"Membership Function\", md\"A function ``f`` that maps the elements of a set ``A`` to the unit interval `` 0, 1 ``\" Membership functions are handy to express how the degree of truth varies over a variable. For example, the predicate \"the temperature is hot\" could be represented by the following membership function \"\"\" let mf1 SigmoidMF 1.0, 20.0 plot mf1, 50, 50 xlabel \"Temperature\" ylabel \"Truth Value\" title \"The temperature is hot\" end md\"\"\" Some popular membership functions You can find a more complete list of membership functions here https www.lucaferranti.com FuzzyLogic.jl dev api memberships , here we show a few popular ones Triangular membership function A triangular shaped membership function is showed below \"\"\" let mf TriangularMF 3, 5, 7 plot mf, 1, 9 end md\"\"\" The triangular membership function can be represented by 3 parameters left foot ``3`` in the example above peak ``5`` in the example above right foot ``7`` in the example above Trapezoidal membership function Can be represented by 4 parameters left foot ``1`` in the example below left shoulder ``3`` in the example below right shoulder ``7`` in the example below right foot ``9`` in the example below \"\"\" let mf TrapezoidalMF 1, 3, 7, 9 plot mf, 0, 10 end md\"\"\" Gaussian membership function It is given by the equation ``e^ \\frac x \\mu ^2 2\\sigma^2 ``, it has two parameters ``\\mu`` mean ``\\sigma`` standard deviation \"\"\" let mf GaussianMF 5.0, 1.0 plot mf, 0, 10 end md\"\"\" Sigmoid membership function Given by the equation ```math \\frac 1 1 e^ a x c ``` has parameters ``c`` center of the sigmoid ``a`` slope of the sigmoid \"\"\" let mf SigmoidMF 2, 5 plot mf, 0, 10 end md\"\"\" Generalized Bell membership function Given by the equation ```math \\frac 1 1 \\vert\\frac x c a \\vert^ 2b ``` the parameters are ``a`` width of the curve ``2`` in the example below ``b`` slope of the curve ``4`` in the example below ``c`` center of the curve ``5`` in the example below \"\"\" let mf GeneralizedBellMF 2, 4, 5 plot mf, 0, 10 end md\"\"\" Membership functions concepts Here we describe some important concepts related to membership functions Support The support of a membership function ``f`` is the subset of the domain for which ``f x 0``, that is Markdown.Admonition \"info\", \"Support\", md\"``\\ x\\in A | f x 0\\ ``\" Core The core of a membership function ``f`` is the subset of the domain for which ``f x 1``, that is Markdown.Admonition \"info\", \"Support\", md\"``\\ x\\in A | f x 0\\ ``\" Alpha cut Subset of the domain for which ``f x \\geq \\alpha``. Markdown.Admonition \"info\", \"alpha cut\", md\"``\\ x\\in A | f x \\geq \\alpha\\ ``\" To practice a bit, let us consider the following membership function \"\"\" let mf TriangularMF 2, 4, 6 plot mf, 0, 8 plot 3, 5 , 0.5, 0.5 , c red end md\"\"\" For this membership function we have support interval `` 2, 6 ``, note the extrema are not included core point ``x 1`` ``\\alpha`` cut for ``\\alpha 0.5`` interval `` 3, 5 `` highlighted in red \"\"\" md\"\"\" Convex membership function Markdown.Admonition \"info\", \"Convex membership function\", md\"A membership function is convex iff for all ``\\alpha \\in 0, 1 ``, its ``\\alpha`` cut is a single interval\" for example the triangular membership function of the example before is convex, because all its alpha cuts are a single interval imagine sliding the red line vertically . Consider however the following function. \"\"\" let mf1 TriangularMF 2, 4, 6 mf2 TriangularMF 4, 6, 8 plot x max mf1 x , mf2 x , 0, 10 plot 3.5, 4.5 , 0.75, 0.75 , c red plot 5.5, 6.5 , 0.75, 0.75 , c red end md\"\"\" In this case, for ``\\alpha 0.75``, the ``\\alpha`` cut is composed by the union of two disjoint intervals `` 3.5, 4.5 \\cup 5.5, 6.5 ``, hence the membership function is not convex. danger \"This definition of convex membership function differs from the definition of a convex function used e.g. in optimization theory\" \"\"\" md\"\"\" Fuzzy logic connectives Let us now learn how we can combine multiple statements using fuzzy logic. First some notation Markdown.Admonition \"info\", \"Truth value\", md\"Given a proposition ``P``, we write ``\\mu P v`` to indicate that the truth value of ``P`` is ``v \\in 0, 1 ``, for example ``\\mu P 0.75``\" Now we can start definiting logical operators Negation While other definitions can be found, we will limit ourselves to the most common one Markdown.Admonition \"info\", \"Fuzzy negation\", md\"``\\mu \\neg P 1 \\mu P ``\" Conjunction There is not a unique definition to define a fuzzy and conjunction . However, we can define some properties we want it to satisfy and find a family of functions satisfying these properties. A function that is a suitable candidate for definition a fuzzy conjunction is called T norm \"\"\" let def md\"\"\" A function ``T 0, 1 \\times 0, 1 \\rightarrow 0, 1 `` is a T norm iff 1. Commutative ``T x, y T y, x `` 2. Associative ``T T x, y , z T x, T y, z `` 3. Monotone if ``x y`` and ``x' y'``, then ``T x, x' T y, y' `` 4. neutral element 1 ``T x, 1 T x `` \"\"\" def box Markdown.Admonition \"info\", \"T norm\", def md\"\"\" def box \"\"\" end md\"\"\" Once we have a T norm, we can define conjunction as ```math \\mu P\\land Q T \\mu P , \\mu Q ``` here are some popular T norm. You can find a more complete list here https www.lucaferranti.com FuzzyLogic.jl dev api logical Conjuction methods Markdown.Admonition \"danger\", \"Stop and think\", md\"Why is a T norm a good candidate for defining conjunction? Go through each bullet of the definition and ask yourself, why do I want this? \" Minimum T norm Also called Gödel T norm defined as ``T x, y \\min x, y `` Łukasiewicz T norm Defined as ``T x, y \\max x y 1, 0 ``. Side note that \"Ł\" is pronounced \"u\" as in the English word \"do\" Product T norm Defined as ``T x, y xy`` \"\"\" md\"\"\" Disjunction Like conjunction, to define disjunction or , we identify a family of suitable candidates, called S norm or T conorm \"\"\" let def md\"\"\" A function ``S 0, 1 \\times 0, 1 \\rightarrow 0, 1 `` is a S norm iff 1. Commutative ``S x, y S y, x `` 2. Associative ``S T x, y , z S x, S y, z `` 3. Monotone if ``x y`` and ``x' y'``, then ``S x, x' S y, y' `` 4. has neutral elment 0 ``S x, 0 S x `` \"\"\" def box Markdown.Admonition \"info\", \"S norm\", def md\"\"\" def box Note the only difference between a T and S norm is the neutral element. Again, go through the bullet points of the definition and ask yourself why they form a good set of requirements for defining disjunction. \"\"\" end md\"\"\" Now we list some popular S norms, a more compehensive list can be found here https www.lucaferranti.com FuzzyLogic.jl dev api logical Disjunction methods maximum S norm ``S x, y \\max x, y `` Bounded sum S norm ``S x, y \\min x y, 1 `` Probabilistic sum S norm ``S x, y x y xy Conjunction Disjunction pair As you may suspect, T norms and S norms come in pairs. That is, once you fix a T norm for conjunction, you also have a corresponding S norm for disjunctions. The corresponding S norm is defined to satisfy the following property. ```math S x, y 1 T 1 x, 1 y ``` Markdown.Admonition \"danger\", \"Stop and think\", md\"What is the logical interpretation of the above relation?\" The following table summarizes how the T and S norms presented so far are paired |T norm|S norm| | | | |Minimum | Maximum | |Łukasiewicz|Bounded sum| |Product | Probabilistic sum| \"\"\" "},{"url":"week1/intro/","title":"Motivation to fuzzy logic","tags":["week1","fuzzy","fuzzy logic"],"text":" A Pluto.jl notebook v0.19.29 frontmatter chapter 1 section 1 order 1 title \"Motivation to fuzzy logic\" tags \"week1\", \"fuzzy\", \"fuzzy logic\" layout \"layout.jlhtml\" using Markdown using InteractiveUtils using PlutoTeachingTools, PlutoUI TableOfContents md\"\"\" Why Fuzzy Logic? \"\"\" html\"\"\" iframe width \"560\" height \"315\" src \"https www.youtube.com embed HMpsJpX4i5A?si teOTO4AL3Kd7ARE\" title \"YouTube video player\" frameborder \"0\" allow \"accelerometer autoplay clipboard write encrypted media gyroscope picture in picture web share\" allowfullscreen iframe \"\"\" md\"\"\" Markdown.Admonition \"danger\", \"Stop and think What went wrong with Sylvester thinking? \", md\"Sylvester saw a bunch of cookies and thought Oh wow, a lot of cookies, if I take only one there is still a lot and nobody will notice. I can take one and still a lot... and one... and one... and one... and one... and ended up with stomach ache\" \"\"\" md\"\"\" Limitations of Traditional Logic Example 1 The previous video is actually just a cuter example of the famous Sororites paradox https en.wikipedia.org wiki Sorites paradox attributed to the greek philosopher Eubulides https en.wikipedia.org wiki Eubulides from the 4th century BCE. In a nutshell the paradox asks When does a heap of sand stop being a heap of sand? The paradox argues Assumption 1 1,000,000 grains of sand are a heap Assumption 2 If you take a single grain of sand from a heap, you still have a heap of sand Now by induction we get I have 1,000,000 grains of sand, hence I have a heap I take one grain away, I have 999,999 grains of sand, I still have a heap I take one grain away, I have 999, 998 grains of sand, I still have a heap ... ... I take one grain away, I have 1 grain of sand, I still have a heap of sand I take one grain away, I have no sand, I still have a heap of sand wtf?? Example 2 Is it cold? We ask a friend the statement \"is it cold?\" is it true or false? If the temperature is 40 C, everyone would agree it is cold If the temperature is 40 C, everyone would agree it is not cold What if the temperature is, say, 10 C? People in Finland would probably say it is not cold People in California would say it is cold Let us suppose it is cold, so being 10 C and being 40 are both true the same way? What do these example have in common? They both work with imprecise statement a lot of cookies, a heap of sand, cold . In traditional logic , statements can only be true 1 or false 0 . Humans, however, think in an imprecise way and we have a lot of vague concepts in everyday life. In the example above, the statement \" 40 degree is cold\" should be \"more true\" than \"10 degrees is true\". Think of a mechanician, he knows by experience what to do when the pressure is high, when the radiator temperature is cold and so on and so on. Can we use the mechanician experience to teach a machine to do the same? To do so, we need to model vague predicates like \"the pressure is high\". Fuzzy Logic Here enters fuzzy logic , in fuzzy logic a statement is not simply true 1 or false 0 , but the truth value can be anything in between . That is, with fuzzy logic we can say that \" 40 degrees is cold\" is 100% true, while \"10 degrees is cold\" is 50% true. In the Sorites paradox above, we start with a true statement, but each step of the induction decreases the truth value of the statement, becoming slowing but continuously less true, until becoming 100% false no sand is not a heap of sand . Why is this cool? Fuzzy logic gives a mathematical framework for vagueness , it allows us to model and formalize humans imprecise thinking. Statements like \"if the pressure is high, put a lot of water\" become something a computer can understand and execute. History and Applications of Fuzzy Logic While mathematicians had started getting interested in fuzzy logic sometimes called by mathematician \"infinite value logic\" , it started becoming more famous when in 1965 Lofti Zadeh published his seminal paper Fuzzy Sets . In his paper, Zadeh showed that fuzzy sets and imprecise statements could be applied to control theory. In his work, Zadeh argued that one could solve control theory problems relying on humans expertise and using fuzzy logic to mathematically formalize this expertise into a controller. To get a taste, check out the following video, where I presented FuzzyLogic.jl https lucaferranti.com FuzzyLogic.jl dev and show a small demo on how to use it to stabilize an inverted pendulum \"\"\" html\"\"\" iframe width \"560\" height \"315\" src \"https www.youtube.com embed 6WfX3e aOBc?si xq3b83M87ZqRHWnt\" title \"YouTube video player\" frameborder \"0\" allow \"accelerometer autoplay clipboard write encrypted media gyroscope picture in picture web share\" allowfullscreen iframe \"\"\" md\"\"\" Since Zadeh introduction, fuzzy logic has continued to grow in popularity and has been very successful in several engineering fields, such as control theory, data analysis, signal processing, knowledge representation, databases. One important aspect of fuzzy logic, is that it uses words and human understandable concepts hence in my opinion we will see a new growing interest in fuzzy logic with the current trend in explainable AI. Markdown.Admonition \"danger\", \"Stop and think Fuzzy Logic vs Probability? \", md\"What is the difference between fuzzy logic and probability theory? They both deal with uncertainty, but how do they differ?\" \"\"\" "},{"url":"week1/traditional_logic/","title":"Recap of classical propositional logic","tags":["week1","propositional logic"],"text":" A Pluto.jl notebook v0.19.29 frontmatter chapter 1 section 2 order 2 title \"Recap of classical propositional logic\" tags \"week1\", \"propositional logic\" layout \"layout.jlhtml\" using Markdown using InteractiveUtils using PlutoTeachingTools, PlutoUI TableOfContents md\"\"\" In classical propositional logic, a proposition statement P can be either `true` or `false`. Propositions can be combined using logical connectives \\neg, \\land, \\lor, \\rightarrow, \\leftrightarrow Negation The statement ``\\neg A`` is the negation of ``A``, represented by the following truth table |``A``| ``\\neg A``| | | | | 0 | 1 | | 1 | 0 | Conjunction The statement ``A \\land B`` means that both ``A`` and ``B`` are true. This can be represented by the following truth table |``A`` | ``B`` | ``A \\land B`` | | | | | | 0 | 0 | 0 | | 0 | 1 | 0 | | 1 | 0 | 0 | | 1 | 1 | 1 | Disjunction The statement ``A \\lor B`` means that either ``A`` or ``B`` is true but could also both be true . Represented by the following truth table |``A`` | ``B`` | ``A \\lor B`` | | | | | | 0 | 0 | 0 | | 0 | 1 | 1 | | 1 | 0 | 1 | | 1 | 1 | 1 | Implication The statement ``A \\rightarrow B`` means ``A`` implies ``B`` read \"If ``A`` then ``B``. Represented by the following truth table |``A`` | ``B`` | ``A \\rightarrow B`` | | | | | | 0 | 0 | 1 | | 0 | 1 | 1 | | 1 | 0 | 0 | | 1 | 1 | 1 | Note In \"common language\" statements like \"If it rains, I take the umbrella\" are often understood to mean that if it doesn't rain, I don't take the umbrella. This is however incorrect The implication says that if the premise is true, then the consequence must be true. However, if the premise is false, then the consequence can be either true or false. This is called principle of explosion or ex falso quodlibet from false, anything follows . Logical equivalence The statement ``A \\leftrightarrow B`` means that ``A`` and ``B`` are logical equivalent, that is whenever ``A`` is true, also ``B`` is true and whenever ``A`` is false, ``B`` is false. It is also read as \"``A`` if and only if ``B``\". In mathematical literature, this is often abbreviated as \"``A`` iff ``B``\" note double f . The trut table is |``A`` | ``B`` | ``A \\leftrightarrow B`` | | | | | | 0 | 0 | 1 | | 0 | 1 | 0 | | 1 | 0 | 0 | | 1 | 1 | 1 | \"\"\" "},{"url":"week2/fuzzy_numbers/","title":"Fuzzy numbers","tags":["week2","fuzzy numbers","interval arithmetic"],"text":" A Pluto.jl notebook v0.19.29 frontmatter chapter \"2\" section \"2\" order \"2\" title \"Fuzzy numbers\" tags \"week2\", \"fuzzy numbers\", \"interval arithmetic\" layout \"layout.jlhtml\" description \"introduction to interval arithmetic and fuzzy numbers\" using Markdown using InteractiveUtils using Plots, PlutoUI, FuzzyLogic, Plots TableOfContents md\"\"\" Interval arithmetic Before talking about fuzzy numbers, it is useful to define interval arithmetic . With traditional arithmetic, we do operations on numbers. With interval arithmetic, we want to define arithmetic operations on intervals. Let two intervals ``X a, b `` and ``Y c, d ``. Then we define ``X Y a c, b d `` ``X Y a d, b c `` ``X Y \\left \\min ac, ad, bc, bd , \\max ac, ad, bc, bd \\right `` ``X Y \\left \\min\\left \\frac a c , \\frac a d , \\frac b c , \\frac b d \\right , \\max\\left \\frac a c , \\frac a d , \\frac b c , \\frac b d \\right \\right ``, assuming ``0 \\notin Y`` Let us see some examples with ``X 2, 3 `` and ``Y 5, 10 `` ``X Y 7, 13 `` ``X Y 8, 2 `` ``X Y 10, 30 `` ``\\frac X Y \\left \\frac 1 5 , \\frac 3 5 \\right `` Markdown.Admonition \"warning\", \"Note \", md\"Interval arithmetic can quickly become strange, because a lot of things you learnt in primary school do not apply. For example, in interval arithmetic ``X X \\neq 0``. Let ``X 2, 3 ``, then ``X X 1, 1 ``. Note however that ``0 \\in X X``. In this case, we get an interval larger than necessary, this happens when the same variable is repeated multiple times in teh expression. This is known as dependency problem .\" Fuzzy numbers In everyday life, we are used to statements like about 150 cm , roughly 5 kg . That is, we do not give exact measures, but imprecise ones. To express this concept, we can use fuzzy numbers . Fuzzy numbers are a special case of fuzzy sets, where the universe set is the set of real numbers, i.e. ``U \\mathbb R ``. Markdown.Admonition \"info\", \"Fuzzy number\", md\"A fuzzy number is a fuzzy set with universe set ``\\mathbb R `` which has convex membership function and bounded support .\" Hence a fuzzy number is a fuzzy set. Furthermore, we set some restrictions on the membership function. Particularly, we want it to be convex and have bounded support . The latter means that the support of the membership function cannot be an interval like `` 1, \\infty ``. Markdown.Admonition \"danger\", \"Stop and think\", md\"Which of the following are fuzzy numbers? Which are not? Motivate your answer\" \"\"\" let mf1 TriangularMF 3, 5, 7 mf2 GaussianMF 5.0, 1.5 mf3 x max TriangularMF 3, 5, 7 x , TriangularMF 4, 6, 8 x mf4 x 0.25 x 5 ^2 3 p1 plot mf1, 0, 10 p2 plot mf2, 0, 10 p3 plot mf3, 0, 10, legend nothing p4 plot mf4, 0, 10, legend nothing plot p1, p2, p3, p4 layout 2, 2 end md\"\"\" Fuzzy arithmetic We are now ready to define operations on fuzzy numbers To do so, we will need two previously introduced concepts ``\\alpha`` cuts interval arithmetic First of all, since fuzzy numbers have convex membership function, each alpha cut will be a single interval. Hence we can perform operations on alpha cuts using interval arithmetic. For example, consider the following fuzzy numbers \"\"\" let p1 plot TriangularMF 1, 2, 3 , 0, 10, title \"A\", c red p2 plot TriangularMF 1, 3, 5 , 0, 10, title \"B\", c blue plot p1, p2 end md\"\"\" Now we denote by ``^ \\alpha A`` for short the ``\\alpha`` cut of ``A``. Now we can find. ``^ 0.25 A 1.25, 2.75 `` ``^ 0.5 A 1.5, 2.5 `` ``^ 1 A 2, 2 `` and for ``B`` ``^ 0.25 B 1.5, 4.5 `` ``^ 0.5 B 2, 4 `` ``^ 1 B 3, 3 `` These intervals can now e.g. be summed with interval arithmetic ``^ 0.25 A ^ 0.25 B 2.75, 7.25 `` ``^ 0.5 A ^ 0.5 B 3.5, 6.5 `` ``^ 1 A ^ 1 B 5, 5 `` Why do we care about this? Because we can use alpha cuts to define operations on fuzzy numbers. For example, the alpha cut of the sum will, be the sum of the alpha cuts. I.e. ```math ^ \\alpha A B ^ \\alpha A ^ \\alpha B ``` Now to compute the sum of two fuzzy numbers ``A B``, all we have to do is to \"just\" repeat the operation above for every ``\\alpha`` in the interval `` 0, 1 ``. The union of the alpha cuts will be the result of the operations. Formally, we write ```math A B \\bigcup \\alpha\\in 0, 1 ~^ \\alpha A ^ \\alpha B ``` The following picture shows the two previous fuzzy numbers and their sum. \"\"\" let p1 plot TriangularMF 1, 2, 3 , 0, 10, title \"A\" plot p1, 1.25, 2.75 , 0.25, 0.25 plot p1, 1.5, 2.5 , 0.5, 0.5 p2 plot TriangularMF 1, 3, 5 , 0, 10, title \"B\" plot p2, 1.5, 4.5 , 0.25, 0.25 plot p2, 2, 4 , 0.5, 0.5 p3 plot TriangularMF 2, 5, 8 , 0, 10, title \"A B\" plot p3, 2.75, 7.25 , 0.25, 0.25 plot p3, 3.5, 6.5 , 0.5, 0.5 plot p1, p2, p3 end md\"\"\" When working on a computer, we cannot use an infinite number of values for ``\\alpha``. Hence what we need to do is to discretize the fuzzy number. I.e. choose a number of alpha cuts and use that to approximate the membership function. \"\"\" "},{"url":"week2/fuzzy_sets/","title":"Fuzzy Sets","tags":["week2","fuzzy","sets"],"text":" A Pluto.jl notebook v0.19.29 frontmatter chapter \"2\" section \"1\" order \"1\" title \"Fuzzy Sets\" tags \"week2\", \"fuzzy\", \"sets\" layout \"layout.jlhtml\" description \"introduction to fuzzy sets\" using Markdown using InteractiveUtils using PlutoUI, FuzzyLogic, Plots, LaTeXStrings TableOfContents md\"\"\" From crisp sets... A set ``A`` is informally a collection of objects. Sets come with an operation ``\\in``, which is used to determine whether an element ``x`` belongs to ``A`` or not. We write this as ``x \\in A``. Hence, each object, either belongs too ``A`` or not. We call this a crisp set . For example, ``\\mathbb N `` the set of natural numbers, we have ``1 \\in \\mathbb N ``, but `` 1 \\notin \\mathbb N `` We call universe set ``U`` the set of all objects. This can be thought as the universe where we work. Now we can define a few operations on sets Intersection ``A \\cap B \\ x \\in U | x \\in A \\land x \\in B\\ `` Union ``A \\cup B \\ x \\in U | x \\in A \\lor x \\in B\\ `` Complement ``\\bar A \\ x \\in U | x \\notin A\\ `` Set theory is often considered the foundation of mathematics, the fundamental theory used to build everything else. ... to fuzzy sets The caveat of set theory, is that the membership operation ``x \\in A`` must be decidable, i.e. for every element ``x`` we must be able to determine if it belongs to ``A`` or not. This is unpractical for imprecise sets we may encounter in everyday life. For example, the set of tall people . Should someone 2 meters high belong to it? Someone 1.70 m high? Should they both belong as much to it? To model vague concepts, we introduce fuzzy sets Markdown.Admonition \"info\", \"Fuzzy set\", md\"A fuzzy set is a function ``A U \\rightarrow 0, 1 ``\" Note that the universe set ``U`` is a traditional crisp set. The definition may look a bit dry, so let us try to understand what it implies. For traditional sets, we had a simple relation ``x \\in A`` telling us whether ``x`` is in ``A`` or not. For fuzzy sets, we have a function ``A x `` telling us how much an element belongs to ``A``. This is a generalization similar to last week, where we went from traditional logic to fuzzy logic. This function is called a membership function , like the ones we saw last week. Let us see now an example The set of tall people, could be represented by the following membership function \"\"\" let mf LinearMF 150, 180 plot mf, 120, 210 xlabel \"Height cm \" ylabel \"Membership degree\" title \"Tall people\" end md\"\"\" According to this membership function, people less than ``150`` cm high do not belong to the set of tall people, people above ``180`` belong to it and people who are ``165`` high belong ``50\\%`` to it. Markdown.Admonition \"warning\", \"Note \", md\"While in mathematics we are used to have one definition everything agrees on, fuzzy sets are... fuzzy There is no one universal definition for a fuzzy set, but the membership function is a modeling choice . That is, when solving a problem with fuzzy logic, it is the engineer responsibility to find an appropriate definition. This can be sometimes tedious, hence later in the class we will also learn how to automatically learn membership functions from data.\" Operations on fuzzy sets. Let us now generalize crisp sets operations to fuzzy sets operations. Intersection Markdown.Admonition \"info\", \"Fuzzy intersection\", md\"`` A \\cap B x T A x , B x ``\" where ``T`` is a T norm . The following plot shows an example of computing the intersection of two fuzzy sets using the minimum T norm. \"\"\" let mf1 TriangularMF 3, 5, 7 mf2 TriangularMF 4, 6, 8 plot x mf1 x , 0, 10, label \"A\" plot x mf2 x , 0, 10, label \"B\" plot x min mf1 x , mf2 x , 0, 10, label \"A ∩ B\" end md\"\"\" Union Markdown.Admonition \"info\", \"Fuzzy union\", md\"`` A \\cup B x S A x , B x ``\" where ``S`` is an S norm . The following plot shows an example of computing the intersection of two fuzzy sets using the maximum S norm. \"\"\" let mf1 TriangularMF 3, 5, 7 mf2 TriangularMF 4, 6, 8 plot x mf1 x , 0, 10, label \"A\" plot x mf2 x , 0, 10, label \"B\" plot x max mf1 x , mf2 x , 0, 10, label \"A ∩ B\" end md\"\"\" Complement Markdown.Admonition \"info\", \"Fuzzy complement\", md\"``\\bar A x 1 A x ``\" \"\"\" let mf1 TriangularMF 3, 5, 7 plot x mf1 x , 0, 10, label \"A\" plot x 1 mf1 x , 0, 10, label \"\\ \\\\overline A \\ \" end md\"\"\" Markdown.Admonition \"danger\", \"Stop and think\", md\"Recall the definition of convex membership function. Is the intersection of convex fuzzy sets always convex? What about the union? and the complement?\" \"\"\" "}]